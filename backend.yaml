- name: configure backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install packages
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql
  
  - name: create expense user  #ansible user module documentation 
    ansible.builtin.user:  #idempotentcy and error handling 
      name: expense
      
  - name: create app directory
    ansible.builtin.file:    #ansible directory module
      path: /app
      state: directory
  
  - name: Download the backend code
    ansible.builtin.get_url: 
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: Unzip the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip  #By default ansible thinks this file is in ansible server
      dest: /app
      remote_src: yes        # this file is located in remote/node server, so yes

  - name: Install Dependencies
    ansible.builtin.command: npm install  #Run the command where package.json is present, it is present in /app directory so change directory
    args: 
      chdir: /app

  - name: copying backend servrice
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  
  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      executable: pip3.9

  - name: import mysql data schema
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

